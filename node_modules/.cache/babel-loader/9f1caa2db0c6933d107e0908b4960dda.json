{"ast":null,"code":"import axios from 'axios';\n\n// const apiUrl = process.env.REACT_APP_API\n// const apiClient = axios.create({\n//   baseURL:process.env.REACT_APP_API,\n// });\n\n// axios.defaults.baseURL = apiUrl;\naxios.defaults.baseURL = process.env.REACT_APP_API;\naxios.interceptors.response.use(response => response, error => {\n  console.error(error);\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    console.log(\"axios\", axios.defaults.baseURL);\n    const result = await axios.get(`/todoitems`);\n    return result.data;\n  },\n  addTask: async newtodo => {\n    const result = await axios.post(`/todoitems`, {\n      name: newtodo,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, IsComplete) => {\n    console.log('setCompleted', {\n      id,\n      IsComplete\n    });\n    const result = await axios.put(`/todoitems/${id}`, {\n      IsComplete: IsComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    const result = await axios.delete(`/todoitems/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_API","interceptors","response","use","error","console","Promise","reject","getTasks","log","result","get","data","addTask","newtodo","post","name","isComplete","setCompleted","id","IsComplete","put","deleteTask","delete"],"sources":["C:/Users/User/Documents/פרקטיקוד/קליינט המורה/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// const apiUrl = process.env.REACT_APP_API\n// const apiClient = axios.create({\n//   baseURL:process.env.REACT_APP_API,\n// });\n\n// axios.defaults.baseURL = apiUrl;\naxios.defaults.baseURL = process.env.REACT_APP_API;\n\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    console.error(error);\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    console.log(\"axios\", axios.defaults.baseURL)\n    const result = await axios.get(`/todoitems`)    \n    return result.data;\n  },\n\n  addTask: async(newtodo)=>{\n    const result = await axios.post(`/todoitems`,{name:newtodo,isComplete:false}) \n    return result.data;\n  },\n\n  setCompleted: async(id, IsComplete)=>{\n    console.log('setCompleted', {id, IsComplete})\n    const result = await axios.put(`/todoitems/${id}`,{IsComplete:IsComplete}) \n    return result.data;\n  },\n\n  deleteTask:async(id)=>{\n    console.log('deleteTask')\n    const result = await axios.delete(`/todoitems/${id}`) \n    return result.data;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;;AAEA;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa;AAElDL,KAAK,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACpB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CAAC,CACF;AAED,eAAe;EACbI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpBH,OAAO,CAACI,GAAG,CAAC,OAAO,EAAEd,KAAK,CAACC,QAAQ,CAACC,OAAO,CAAC;IAC5C,MAAMa,MAAM,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAE,YAAW,CAAC;IAC5C,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,OAAO,IAAG;IACvB,MAAMJ,MAAM,GAAG,MAAMf,KAAK,CAACoB,IAAI,CAAE,YAAW,EAAC;MAACC,IAAI,EAACF,OAAO;MAACG,UAAU,EAAC;IAAK,CAAC,CAAC;IAC7E,OAAOP,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDM,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEC,UAAU,KAAG;IACnCf,OAAO,CAACI,GAAG,CAAC,cAAc,EAAE;MAACU,EAAE;MAAEC;IAAU,CAAC,CAAC;IAC7C,MAAMV,MAAM,GAAG,MAAMf,KAAK,CAAC0B,GAAG,CAAE,cAAaF,EAAG,EAAC,EAAC;MAACC,UAAU,EAACA;IAAU,CAAC,CAAC;IAC1E,OAAOV,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDU,UAAU,EAAC,MAAMH,EAAE,IAAG;IACpBd,OAAO,CAACI,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMC,MAAM,GAAG,MAAMf,KAAK,CAAC4B,MAAM,CAAE,cAAaJ,EAAG,EAAC,CAAC;IACrD,OAAOT,MAAM,CAACE,IAAI;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:27310\";\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:27310\"\n});\napiClient.interceptors.response.use(response => response, error => {\n  console.error(error);\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}`);\n    return result.data;\n  },\n  addTask: async newtodo => {\n    const result = await axios.post(`${apiUrl}/todoitems`, {\n      name: newtodo,\n      isComplete: false\n    });\n    return result.data;\n  },\n  setCompleted: async (id, IsComplete) => {\n    console.log('setCompleted', {\n      id,\n      IsComplete\n    });\n    const result = await axios.put(`${apiUrl}/todoitems/${id}`, {\n      IsComplete: IsComplete\n    });\n    return result.data;\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    const result = await axios.delete(`${apiUrl}/todoitems/${id}`);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","apiUrl","apiClient","create","baseURL","interceptors","response","use","error","console","Promise","reject","getTasks","result","get","data","addTask","newtodo","post","name","isComplete","setCompleted","id","IsComplete","log","put","deleteTask","delete"],"sources":["C:/Users/User/Documents/פרקטיקוד/קליינט המורה/ToDoListReact-master/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiUrl = \"http://localhost:27310\"\nconst apiClient = axios.create({\n  baseURL: \"http://localhost:27310\",\n});\n\napiClient.interceptors.response.use(\n  response => response,\n  error => {\n    console.error(error);\n    return Promise.reject(error);\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`${apiUrl}`)    \n    return result.data;\n  },\n\n  addTask: async(newtodo)=>{\n    const result = await axios.post(`${apiUrl}/todoitems`,{name:newtodo,isComplete:false}) \n    return result.data;\n  },\n\n  setCompleted: async(id, IsComplete)=>{\n    console.log('setCompleted', {id, IsComplete})\n    const result = await axios.put(`${apiUrl}/todoitems/${id}`,{IsComplete:IsComplete}) \n    return result.data;\n  },\n\n  deleteTask:async(id)=>{\n    console.log('deleteTask')\n    const result = await axios.delete(`${apiUrl}/todoitems/${id}`) \n    return result.data;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,wBAAwB;AACvC,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFF,SAAS,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CACjCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACpB,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CAAC,CACF;AAED,eAAe;EACbI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEb,MAAO,EAAC,CAAC;IAC3C,OAAOY,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,OAAO,IAAG;IACvB,MAAMJ,MAAM,GAAG,MAAMb,KAAK,CAACkB,IAAI,CAAE,GAAEjB,MAAO,YAAW,EAAC;MAACkB,IAAI,EAACF,OAAO;MAACG,UAAU,EAAC;IAAK,CAAC,CAAC;IACtF,OAAOP,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDM,YAAY,EAAE,MAAAA,CAAMC,EAAE,EAAEC,UAAU,KAAG;IACnCd,OAAO,CAACe,GAAG,CAAC,cAAc,EAAE;MAACF,EAAE;MAAEC;IAAU,CAAC,CAAC;IAC7C,MAAMV,MAAM,GAAG,MAAMb,KAAK,CAACyB,GAAG,CAAE,GAAExB,MAAO,cAAaqB,EAAG,EAAC,EAAC;MAACC,UAAU,EAACA;IAAU,CAAC,CAAC;IACnF,OAAOV,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDW,UAAU,EAAC,MAAMJ,EAAE,IAAG;IACpBb,OAAO,CAACe,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMX,MAAM,GAAG,MAAMb,KAAK,CAAC2B,MAAM,CAAE,GAAE1B,MAAO,cAAaqB,EAAG,EAAC,CAAC;IAC9D,OAAOT,MAAM,CAACE,IAAI;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}